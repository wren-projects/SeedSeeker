.TH SeedSeeker
.SH NAME
seedseeker \- PRNG reversal tool
.SH SYNOPSIS
This program has 3 main usage modes

Reversal mode: 
.in +.5i
e.g.: python \-m seedseeker -r
.br
Reads a sequence of integers (one per line) from the input, stopping at EOF or empty line. Then
tries to reverse the generator that produced it and it's state. For each generator where the
reversal is successful, a line with its name and state will be printed to output.
.in

Generation mode: 
.in +.5i
python \-m seedseeker -g <name> <arguments> [-l <total>]
.br
Generates <total> numbers using the generator <name> with the specified <arguments>.
The expected formats for generator arguments are detailed in the full documentation.
.in

Prediction mode:
.in +.5i
python \-m seedseeker -p [-l <total>]
.br
If no input file is specified, the program will accept user input. The input should include the name
of the generator and its internal state, similar to generative mode. Unlike generative mode,
predictive mode can process the internal states of multiple generators and predict future values for
all of them. (For some generators, obtaining the exact seed may not be possible. In such cases, the
tool can find a state from which future values can still be predicted, e.g., Mersenne Twister.) 
.in

Generally, the program reads input from stdin and writes output to stdout (and errors to stderr).
This behavior can be modified using the -i and -o flags.

.SHâ€Œ EXAMPLE

python \-m seedseeker -g mersenne 12345 -l 1000 -o sequence.txt

python \-m seedseeker -r -i sequence.txt -o reversed.txt

python \-m seedseeker -p -l 10 -i reversed.txt

.SH DESCRIPTION
A tool with the ability to infer internal parameters of PRNGs from a sufficiently sized data sample.

-h, --help
.in +.5i
Show a shortened version of this manual.
.in

-g, --generate <name> <arguments>  
.in +.5i
Generates numbers by generator <name> with initial state defined by <arguments>. 
The number of generated values defaults to 16 and can be changed with the -l
flag. This default is intended for human readability, it is recommended to use a
larger number of values when trying to reverse or otherwise analyze the
sequence.
.in

-l, --limit <total>
.in +.5i
Length of the sequence generated/predicted or limit on the length of the sequence
to be reversed. Default is 16 or 1024 respectively.
.in

-r, --reverse
.in +.5i
Tries to reverse the given sequence of numbers from input.
Prints generator name and state for every generator where the reversal succeeded.
.br
Note: 
.in +.5i
For some generators reversal can be quite dependent on the arguments of the generator.
This tool works best if the generators have "good" initial arguments, in degenerate
cases the output may not match the expected results (for example, LCG works best
if the multiplier is coprime with the modulus).
.in -1i

-p, --predict
.in +.5i
Predicts future values from a given generator state(s) in the format returned by -r.
The number of generated values defaults to 16 and can be changed with the -l flag.
.br
For example:
.in +.5i
python \-m seedseeker -r -i values.txt -o gen_state.txt
.br
python \-m seedseeker -p -l 10 -i gen_state.txt
.in -1i

-i, --input <file> 
.in +.5i
The program will read input from the specified file.
.in

-o, --output <file>
.in +.5i
Output of the program will be written to the specified file.
.in

-v, --version
.in +.5i
Program version
.in

.SH SEE ALSO
dieharder(1)
