name: CD

on:
  push:
    tags:
      - v[0-9]+.*

env:
  PY_COLORS: 1
  UV_VERSION: "0.6.3"

jobs:
  check-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Get the result of checks for this commit
        id: get-result
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
               "/repos/${{ github.repository }}/commits/${{ github.sha }}/check-runs" > runs.json

          RESULT=$(jq -rc '[.check_runs[] | select(.name | startswith("ci")) | .conclusion] | first' < runs.json)

          echo "RESULT=$RESULT"
          echo "RESULT=$RESULT" >> "$GITHUB_OUTPUT"

      - name: Check the result
        if: ${{ steps.get-result.outputs.RESULT != 'success' }}
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('CI was not successful')

  build:
    needs: check-ci
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Set up uv
        uses: yezz123/setup-uv@v4
        with:
          uv-version: ${{ env.UV_VERSION }}

      - name: Initialize workflow variables
        id: vars
        shell: bash
        run: |
          TARGET=${{ matrix.os }}

          case $TARGET in
            windows) BINARY="seedseeker.exe" ;;
            *)       BINARY="seedseeker" ;;
          esac;

          echo "BINARY=${BINARY}"
          echo "BINARY=${BINARY}" >> "$GITHUB_OUTPUT"

          case $TARGET in
            ubuntu) ARCHIVE="seedseeker_linux.tar.gz" ;;
            *)      ARCHIVE="seedseeker_$TARGET.zip" ;;
          esac;

          echo "ARCHIVE=${ARCHIVE}"
          echo "ARCHIVE=${ARCHIVE}" >> "$GITHUB_OUTPUT"

      - name: Build
        run: |
          uv run pyinstaller bin/seedseeker --onefile

      - name: Create archive
        run: |
          tar caf ./${{ steps.vars.outputs.ARCHIVE }} --directory=dist ${{ steps.vars.outputs.BINARY }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: ./${{ steps.vars.outputs.ARCHIVE }}

  build-docs:
    needs: check-ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup tectonic
        uses: wtfjoke/setup-tectonic@v3

      - name: Build documentation
        run: tectonic doc/doc.tex

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: doc
          path: doc/doc.pdf

  upload-to-release:
    needs: [build, build-docs]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create GitHub Release
        id: create_release
        run: |
          gh release create ${{ github.ref_name }} --generate-notes --draft
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Upload binaries to release
        run: |
          for file in ./artifacts/**/*; do
            if [ ! -f "$file" ]; then
              # skip directories
              continue
            fi

            gh release upload ${{ github.ref_name }} "$file"
          done
        env:
          GH_TOKEN: ${{ github.token }}
